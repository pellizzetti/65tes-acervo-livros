@layout('main')

@section('content')
  <section class="container">
    <div class="card">
      <a class="float-left" href="/authors">â¬… Voltar</a>
      <hr>
      <h2>Adicionar autor</h2>
      <form method="POST" action="/authors">
        {{ csrfField() }}
        <fieldset>
          <label for="firstname">Nome</label>
          {{ elIf('<span class="err">$self</span>', getErrorFor('firstname'), hasErrorFor('firstname')) }}
          @if(editing)
            <input type="text" name="firstname" value="{{ author.firstname }}">
          @else
            <input type="text" name="firstname" value="{{ old('firstname', '') }}">
          @endif

          <label for="lastname">Sobrenome</label>
          {{ elIf('<span class="err">$self</span>', getErrorFor('lastname'), hasErrorFor('lastname')) }}
          @if(editing)
            <input type="text" name="lastname" value="{{ author.lastname }}">
          @else
            <input type="text" name="lastname" value="{{ old('lastname', '') }}">
          @endif
          
          <label for="birthday">Data de Nascimento</label>
          {{ elIf('<span class="err">$self</span>', getErrorFor('birthday'), hasErrorFor('birthday')) }}
          
          <hr>

          @if(editing)
            <input class="button-primary float-right" type="submit" onclick="this.form.action = location.pathname + '?_method=put'" value="Editar">
          @else
            <input class="button-primary float-right" type="submit" value="Adicionar">
          @endif
          
        </fieldset>
      </form>
    </div>
  <section class="container">
  <script>
    const elBirthday = document.getElementById('birthday')
    const maxDate = new Date()
    const maxYear = maxDate.getFullYear() - 6

    maxDate.setFullYear(maxYear)

    const maskOptions = {
      mask: Date,
      pattern: 'YYYY/MM/DD',
      groups: {
        YYYY: new IMask.MaskedPattern.Group.Range([1450, maxYear]),
        MM: new IMask.MaskedPattern.Group.Range([1, 12]),
        DD: new IMask.MaskedPattern.Group.Range([1, 31]),
      },
      format: (date) => {
        const day = date.getDate()
        const month = date.getMonth() + 1
        const year = date.getFullYear()

        if (day < 10) day = '0' + day
        if (month < 10) month = '0' + month

        return [year, month, day].join('/')
      },
      parse: (str) => {
        const yearMonthDay = str.split('/')

        return new Date(yearMonthDay[0], yearMonthDay[1] - 1, yearMonthDay[2])
      },
      lazy: false
    }

    new IMask(elBirthday, maskOptions)
  </script>
@endsection
